package MagicianAgent;

import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Liuxuan Huang lkh5155
 */
public class GUIDisplay extends javax.swing.JFrame 
{
    private final List<Holiday> holidayList;
    private List<Magician> magicianList;
    private List<WaitList> waitList;
    private List<Customer> customerList;
    private List<Customer> WLCustomerList;
    private List<bookingTable> results;
    private String customerName;
    private String selectedHoliday;
    private Holiday newHoliday = new Holiday();
    private String selectedMagician;
    private Magician deletedMagician = new Magician();
    private Magician newMagician = new Magician();
    private String rescheduledMagician;
    private String freeMagician;

    private bookingTable currentEntry;
    private WaitList currentWaitList;
    private final Status status = new Status();
    private final WaitListManage wlManage = new WaitListManage();
    private final Book book = new Book();
    private final Add add = new Add();
    private final Delete del = new Delete();
    private int numberOfEntries = 0;
    private int currentEntryIndex;
    /**
     * Creates new form GUIDisplay
     */
    public GUIDisplay() 
    {
        initComponents();
        
        holidayList = status.getAllHolidays();
        for (int i = 0; i < holidayList.size(); i++)
        {
            holidayChooser.addItem(holidayList.get(i).getHolidayName());
            holidayChooser1.addItem(holidayList.get(i).getHolidayName());
            holidayChooser2.addItem(holidayList.get(i).getHolidayName());
            holidayChooser3.addItem(holidayList.get(i).getHolidayName());
        }
        magicianList = status.getAllMagicians();
        for (int i = 0; i < magicianList.size(); i++)
        {
            magicianChooser.addItem(magicianList.get(i).getID());
            magicianChooser1.addItem(magicianList.get(i).getID());
        }
        customerList = status.getAllCustomers();
        for (int i = 0; i < customerList.size(); i++)
        {
            nameChooser.addItem(customerList.get(i).getName());
        }
        WLCustomerList = wlManage.getAllWLCustomers();
        for (int i = 0; i < WLCustomerList.size(); i++)
        {
            nameChooserWL.addItem(WLCustomerList.get(i).getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        holidayChooser = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();
        bookClearButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        magicianChooser = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        holidayChooser1 = new javax.swing.JComboBox<>();
        HStatusButton = new javax.swing.JButton();
        MStatusButton = new javax.swing.JButton();
        holidayTextField = new javax.swing.JTextField();
        magicianTextField = new javax.swing.JTextField();
        nameTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        previousButton = new javax.swing.JButton();
        indexTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        maxTextField = new javax.swing.JTextField();
        nextButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        browseButton = new javax.swing.JButton();
        statusClearButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        waitListButton = new javax.swing.JButton();
        wlClearButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        holidayTextField2 = new javax.swing.JTextField();
        nameTextField3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        previousButton1 = new javax.swing.JButton();
        indexTextField1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        maxTextField1 = new javax.swing.JTextField();
        nextButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addHolidayText = new javax.swing.JTextField();
        addMagicianText = new javax.swing.JTextField();
        holidayChooser2 = new javax.swing.JComboBox<>();
        magicianChooser1 = new javax.swing.JComboBox<>();
        addHolidayButton = new javax.swing.JButton();
        clearAddButton = new javax.swing.JButton();
        addMagicianButton = new javax.swing.JButton();
        deleteMagicianButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        nameChooser = new javax.swing.JComboBox<>();
        cancelBookButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        cancelWLButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        holidayChooser3 = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        nameChooserWL = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Holiday:");

        holidayChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   " }));
        holidayChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayChooserActionPerformed(evt);
            }
        });

        jLabel3.setText("Customer Name:");

        insertButton.setText("Book");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        bookClearButton.setText("Clear");
        bookClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bookClearButton)
                        .addGap(36, 36, 36)
                        .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(38, 38, 38)
                                .addComponent(holidayChooser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 115, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(holidayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(bookClearButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Book", jPanel1);

        jLabel2.setText("Magician:");

        magicianChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   " }));

        jLabel7.setText("Holiday:");

        holidayChooser1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   " }));
        holidayChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayChooser1ActionPerformed(evt);
            }
        });

        HStatusButton.setText("Request");
        HStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HStatusButtonActionPerformed(evt);
            }
        });

        MStatusButton.setText("Request");
        MStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MStatusButtonActionPerformed(evt);
            }
        });

        holidayTextField.setEditable(false);

        magicianTextField.setEditable(false);

        nameTextField1.setEditable(false);

        jLabel5.setText("Customer Name:");

        jLabel9.setText("Holiday:");

        jLabel10.setText("Magician:");

        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        indexTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("OF");

        maxTextField.setEditable(false);

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        browseButton.setText("All Orders");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        statusClearButton.setText("Clear");
        statusClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(73, 73, 73)
                                    .addComponent(magicianChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(holidayChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HStatusButton)
                            .addComponent(MStatusButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(previousButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(indexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(statusClearButton)
                                .addGap(18, 18, 18)
                                .addComponent(browseButton))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(nameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(magicianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(holidayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magicianChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MStatusButton)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(holidayChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HStatusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousButton)
                    .addComponent(indexTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(maxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextButton))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magicianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusClearButton)
                    .addComponent(browseButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Status", jPanel2);

        waitListButton.setText("Status Request");
        waitListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitListButtonActionPerformed(evt);
            }
        });

        wlClearButton.setText("Clear");
        wlClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wlClearButtonActionPerformed(evt);
            }
        });

        holidayTextField2.setEditable(false);

        nameTextField3.setEditable(false);

        jLabel16.setText("Customer Name:");

        jLabel18.setText("Holiday:");

        previousButton1.setText("Previous");
        previousButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButton1ActionPerformed(evt);
            }
        });

        indexTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexTextField1ActionPerformed(evt);
            }
        });

        jLabel20.setText("OF");

        maxTextField1.setEditable(false);

        nextButton1.setText("Next");
        nextButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(previousButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(indexTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextButton1)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(nameTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(holidayTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(115, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousButton1)
                    .addComponent(indexTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(maxTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextButton1))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidayTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(waitListButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(wlClearButton)
                .addGap(35, 35, 35))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(waitListButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(wlClearButton)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Wait List", jPanel3);

        jLabel11.setText("Holiday:");

        jLabel12.setText("Magician:");

        holidayChooser2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   " }));

        magicianChooser1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   " }));

        addHolidayButton.setText("Add");
        addHolidayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHolidayButtonActionPerformed(evt);
            }
        });

        clearAddButton.setText("Clear");
        clearAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAddButtonActionPerformed(evt);
            }
        });

        addMagicianButton.setText("Add");
        addMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMagicianButtonActionPerformed(evt);
            }
        });

        deleteMagicianButton.setText("Delete");
        deleteMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMagicianButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(addMagicianButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteMagicianButton)
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addHolidayButton)
                                    .addComponent(addHolidayText, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(addMagicianText, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(holidayChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(magicianChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(clearAddButton)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addHolidayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holidayChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addHolidayButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(addMagicianText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(magicianChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMagicianButton)
                    .addComponent(deleteMagicianButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(clearAddButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add/Delete", jPanel5);

        jLabel13.setText("Customer Name:");

        nameChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   " }));

        cancelBookButton.setText("Cancel Order");
        cancelBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookButtonActionPerformed(evt);
            }
        });

        cancelWLButton.setText("Cancel WaitList");
        cancelWLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelWLButtonActionPerformed(evt);
            }
        });

        jLabel22.setText("Holiday:");

        holidayChooser3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  " }));

        jLabel4.setText("Customer Name:");

        nameChooserWL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  " }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addComponent(nameChooserWL, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jSeparator2))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel22)
                .addGap(70, 70, 70)
                .addComponent(holidayChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 73, Short.MAX_VALUE))
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13)
                .addGap(26, 26, 26)
                .addComponent(nameChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator4)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelBookButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelWLButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(holidayChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(nameChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelBookButton)
                .addGap(19, 19, 19)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameChooserWL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(cancelWLButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cancel", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButton1ActionPerformed
        currentEntryIndex++;

        if (currentEntryIndex >= numberOfEntries)
        currentEntryIndex = 0;
        indexTextField1.setText("" + (currentEntryIndex + 1));
        indexTextField1ActionPerformed(evt);
    }//GEN-LAST:event_nextButton1ActionPerformed

    private void indexTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexTextField1ActionPerformed
        currentEntryIndex = (Integer.parseInt(indexTextField1.getText()) - 1);

        if (numberOfEntries != 0 && currentEntryIndex < numberOfEntries)
        {
            currentWaitList = waitList.get(currentEntryIndex);
            holidayTextField2.setText(currentWaitList.getHoliday());
            nameTextField3.setText(currentWaitList.getName());
            maxTextField1.setText("" + numberOfEntries);
            indexTextField1.setText("" + (currentEntryIndex + 1));
        }
    }//GEN-LAST:event_indexTextField1ActionPerformed

    private void previousButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButton1ActionPerformed
        currentEntryIndex--;

        if (currentEntryIndex < 0)
        currentEntryIndex = numberOfEntries - 1;

        indexTextField1.setText("" + (currentEntryIndex + 1));
        indexTextField1ActionPerformed(evt);
    }//GEN-LAST:event_previousButton1ActionPerformed

    private void wlClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wlClearButtonActionPerformed
        holidayTextField2.setText("");
        nameTextField3.setText("");
        maxTextField1.setText("");
        indexTextField1.setText("");
    }//GEN-LAST:event_wlClearButtonActionPerformed

    private void waitListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitListButtonActionPerformed
        try
        {
            waitList = wlManage.getAllWaitList();
            numberOfEntries = waitList.size();

            if (numberOfEntries != 0)
            {
                currentEntryIndex = 0;
                currentWaitList = waitList.get(currentEntryIndex);
                holidayTextField2.setText(currentWaitList.getHoliday());
                nameTextField3.setText(currentWaitList.getName());
                maxTextField1.setText("" + numberOfEntries);
                indexTextField1.setText("" + (currentEntryIndex + 1));
                nextButton1.setEnabled(true);
                previousButton1.setEnabled(true);
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_waitListButtonActionPerformed

    private void statusClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusClearButtonActionPerformed
        holidayTextField.setText("");
        magicianTextField.setText("");
        nameTextField1.setText("");
        maxTextField.setText("");
        indexTextField.setText("");
    }//GEN-LAST:event_statusClearButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        try
        {
            results = status.getAllOrders();
            numberOfEntries = results.size();

            if (numberOfEntries != 0)
            {
                currentEntryIndex = 0;
                currentEntry = results.get(currentEntryIndex);
                holidayTextField.setText(currentEntry.getHoliday());
                magicianTextField.setText(currentEntry.getMagician());
                nameTextField1.setText(currentEntry.getName());
                maxTextField.setText("" + numberOfEntries);
                indexTextField.setText("" + (currentEntryIndex + 1));
                nextButton.setEnabled(true);
                previousButton.setEnabled(true);
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        currentEntryIndex++;

        if (currentEntryIndex >= numberOfEntries)
        currentEntryIndex = 0;
        indexTextField.setText("" + (currentEntryIndex + 1));
        indexTextFieldActionPerformed(evt);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void indexTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexTextFieldActionPerformed
        currentEntryIndex = (Integer.parseInt(indexTextField.getText()) - 1);

        if (numberOfEntries != 0 && currentEntryIndex < numberOfEntries)
        {
            currentEntry = results.get(currentEntryIndex);
            holidayTextField.setText(currentEntry.getHoliday());
            magicianTextField.setText(currentEntry.getMagician());
            nameTextField1.setText(currentEntry.getName());
            maxTextField.setText("" + numberOfEntries);
            indexTextField.setText("" + (currentEntryIndex + 1));
        }
    }//GEN-LAST:event_indexTextFieldActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        currentEntryIndex--;

        if (currentEntryIndex < 0)
        currentEntryIndex = numberOfEntries - 1;

        indexTextField.setText("" + (currentEntryIndex + 1));
        indexTextFieldActionPerformed(evt);
    }//GEN-LAST:event_previousButtonActionPerformed

    private void MStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MStatusButtonActionPerformed
        results = Status.getStatusM(magicianChooser.getSelectedItem().toString());
        numberOfEntries = results.size();

        currentEntryIndex = 0;
        currentEntry = results.get(currentEntryIndex);
        holidayTextField.setText(currentEntry.getHoliday());
        magicianTextField.setText(currentEntry.getMagician());
        nameTextField1.setText(currentEntry.getName());
        maxTextField.setText("" + numberOfEntries);
        indexTextField.setText("" + (currentEntryIndex + 1));
        nextButton.setEnabled(true);
        previousButton.setEnabled(true);
    }//GEN-LAST:event_MStatusButtonActionPerformed

    private void HStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HStatusButtonActionPerformed
        results = Status.getStatusH(selectedHoliday);
        numberOfEntries = results.size();

        currentEntryIndex = 0;
        currentEntry = results.get(currentEntryIndex);
        holidayTextField.setText(currentEntry.getHoliday());
        magicianTextField.setText(currentEntry.getMagician());
        nameTextField1.setText(currentEntry.getName());
        maxTextField.setText("" + numberOfEntries);
        indexTextField.setText("" + (currentEntryIndex + 1));
        nextButton.setEnabled(true);
        previousButton.setEnabled(true);
    }//GEN-LAST:event_HStatusButtonActionPerformed

    private void holidayChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayChooser1ActionPerformed
        selectedHoliday = holidayChooser1.getSelectedItem().toString();
    }//GEN-LAST:event_holidayChooser1ActionPerformed

    private void bookClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookClearButtonActionPerformed
        nameTextField.setText("");
    }//GEN-LAST:event_bookClearButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        freeMagician = book.getFreeMagician(selectedHoliday);

        customerName = nameTextField.getText();
        Customer customer = new Customer(customerName);

        Holiday hol = new Holiday();
        hol.setHolidayName(selectedHoliday);
        
        if (freeMagician != null)
        {
            int result = 0;
            Magician freeM = new Magician();
            
            freeM.setID(freeMagician);

            result = Book.addCustomer(hol, customer, freeM);

            if (result == 1)
            JOptionPane.showMessageDialog(this, "Booking Successful!","Book", JOptionPane.PLAIN_MESSAGE);
            else
            JOptionPane.showMessageDialog(this, "Booking Failed!","Error", JOptionPane.PLAIN_MESSAGE);

            nameChooser.addItem(customerName);

            browseButtonActionPerformed(evt);
        }
        else
        {
            Book.addWaitList(customer,hol);
            JOptionPane.showMessageDialog(this, "Not available!","Add to Waiting List", JOptionPane.PLAIN_MESSAGE);
            nameChooserWL.addItem(customerName);
            waitListButtonActionPerformed(evt);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void holidayChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayChooserActionPerformed
        selectedHoliday = holidayChooser.getSelectedItem().toString();
    }//GEN-LAST:event_holidayChooserActionPerformed

    private void clearAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAddButtonActionPerformed
        addHolidayText.setText("");
        addMagicianText.setText("");
    }//GEN-LAST:event_clearAddButtonActionPerformed

    private void cancelBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookButtonActionPerformed
        rescheduledMagician = status.getRescheduledMagician(nameChooser.getSelectedItem().toString(),holidayChooser3.getSelectedItem().toString());
        
        waitList = wlManage.getAllWaitList();
        bookingTable cancelCustomer = new bookingTable();
        cancelCustomer.setName(nameChooser.getSelectedItem().toString());
        cancelCustomer.setHoliday(holidayChooser3.getSelectedItem().toString());
        cancelCustomer.setMagician(rescheduledMagician);

        int result = 0;
        result = Book.deleteBooking(cancelCustomer);
        
        if (result == 1)
        {
            customerName = status.checkWLCustomer(holidayChooser3.getSelectedItem().toString());
            if(customerName != null)
            {
                Customer customer = new Customer(customerName);
                Holiday hol = new Holiday();
                hol.setHolidayName(holidayChooser3.getSelectedItem().toString());
            
                freeMagician = book.getFreeMagician(holidayChooser3.getSelectedItem().toString());
                Magician freeM = new Magician();
                freeM.setID(freeMagician);
                int bookResult = 0;
                bookResult = Book.addCustomer(hol, customer, freeM);
            
                if(bookResult == 1)
                {   
                    JOptionPane.showMessageDialog(this, "Add Wait List Customer to Booking!","Cancel Order", JOptionPane.PLAIN_MESSAGE);
                    selectedHoliday = holidayChooser3.getSelectedItem().toString();
                
                    WaitList cancelWL = new WaitList();
                    cancelWL.setHoliday(holidayChooser3.getSelectedItem().toString());
                    cancelWL.setName(customerName);

                    Book.deleteWaitList(cancelWL);
                
                    nameChooserWL.removeAllItems();
                    WLCustomerList = wlManage.getAllWLCustomers();
                    for (int i = 0; i < WLCustomerList.size(); i++)
                    {
                        nameChooserWL.addItem(WLCustomerList.get(i).getName());
                    }
                    waitListButtonActionPerformed(evt);
                }
            }
            JOptionPane.showMessageDialog(this, "Cancel Successful!","Cancel Order", JOptionPane.PLAIN_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "Cancel Failed!","Error", JOptionPane.PLAIN_MESSAGE);

        nameChooser.removeAllItems();
        customerList = status.getAllCustomers();
        for (int i = 0; i < customerList.size(); i++)
        {
            nameChooser.addItem(customerList.get(i).getName());
        }
        
    }//GEN-LAST:event_cancelBookButtonActionPerformed

    private void deleteMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMagicianButtonActionPerformed
        int result = 0;
        selectedMagician = magicianChooser1.getSelectedItem().toString();
        deletedMagician.setID(selectedMagician);
        result = Delete.deleteMagician(deletedMagician);
        magicianChooser.removeAllItems();
        magicianChooser1.removeAllItems();
        magicianList = status.getAllMagicians();
        for (int i = 0; i < magicianList.size(); i++)
        {
            magicianChooser.addItem(magicianList.get(i).getID());
            magicianChooser1.addItem(magicianList.get(i).getID());
        }
        if (result == 1)
        {
            JOptionPane.showMessageDialog(this, "Delete Successful!", "Withdraw Magician", JOptionPane.PLAIN_MESSAGE);
            if (Status.getStatusM(selectedMagician) != null)
            {
                results = Status.getStatusM(selectedMagician);
                for(int i = 0; i < results.size(); i++)
                {
                    currentEntry = results.get(i);
                    selectedHoliday = currentEntry.getHoliday();
                    customerName = currentEntry.getName();
                    Book.deleteBooking(currentEntry);
                    
                    freeMagician = book.getFreeMagician(selectedHoliday);
                    
                    Customer customer = new Customer(customerName);
                    Holiday hol = new Holiday();
                    hol.setHolidayName(selectedHoliday);
            
                    if(freeMagician != null)
                    {
                        Magician freeM = new Magician();
                        freeM.setID(freeMagician);
                        
                        int bookResult = 0;
                        bookResult = Book.addCustomer(hol, customer, freeM);
                        if(bookResult == 1)
                        {
                            JOptionPane.showMessageDialog(this, "Reassigned Magician!", "Withdraw Magician", JOptionPane.PLAIN_MESSAGE);    
                        }    
                    }
                    else
                    {
                        int bookResult = 0;
                        bookResult = Book.insertWaitList(customer,hol);
                        if(bookResult == 1)
                        JOptionPane.showMessageDialog(this, "Add customer to WaitList!", "Withdraw Magician", JOptionPane.PLAIN_MESSAGE);
                        
                        waitList = wlManage.getAllWaitList();
                        nameChooserWL.removeAllItems();
                        WLCustomerList = wlManage.getAllWLCustomers();
                        for (int j = 0; j < WLCustomerList.size(); j++)
                        {
                            nameChooserWL.addItem(WLCustomerList.get(j).getName());
                        }
                    }
                }
                nameChooser.removeAllItems();
                customerList = status.getAllCustomers();
                for (int k = 0; k < customerList.size(); k++)
                {
                    nameChooser.addItem(customerList.get(k).getName());
                }
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Delete Failed!", "Error", JOptionPane.PLAIN_MESSAGE);
       
        browseButtonActionPerformed(evt);
    }//GEN-LAST:event_deleteMagicianButtonActionPerformed

    private void addHolidayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHolidayButtonActionPerformed
        int result = 0;
        newHoliday.setHolidayName(addHolidayText.getText());
        result = Add.addHoliday(newHoliday);
        if (result == 1)
            JOptionPane.showMessageDialog(this, "Adding Successful!","Add new Holiday", JOptionPane.PLAIN_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "Adding Failed!","Error", JOptionPane.PLAIN_MESSAGE);
        holidayChooser.addItem(newHoliday.getHolidayName());
        holidayChooser1.addItem(newHoliday.getHolidayName());
        holidayChooser2.addItem(newHoliday.getHolidayName());
        holidayChooser3.addItem(newHoliday.getHolidayName());
    }//GEN-LAST:event_addHolidayButtonActionPerformed

    private void addMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMagicianButtonActionPerformed
        int result = 0;
        newMagician.setID(addMagicianText.getText());
        result = Add.addMagician(newMagician);

        magicianChooser.addItem(newMagician.getID());
        magicianChooser1.addItem(newMagician.getID());

        if (result == 1)
            JOptionPane.showMessageDialog(this, "Adding Successful!","Add new Magician", JOptionPane.PLAIN_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "Adding Failed!", "Error", JOptionPane.PLAIN_MESSAGE);
        
        waitList = wlManage.getAllWaitList();
        if (waitList != null)
        {
            currentWaitList = waitList.get(0);
            int bookResult = 0;
            selectedHoliday = currentWaitList.getHoliday();
            freeMagician = book.getFreeMagician(selectedHoliday);
            while(freeMagician != null)
            {
                customerName = currentWaitList.getName();
                Holiday hol = new Holiday();
                hol.setHolidayName(selectedHoliday);
                Customer customer = new Customer(customerName);
                
                Magician freeM = new Magician();
                freeM.setID(freeMagician);
                bookResult = Book.addCustomer(hol, customer, newMagician);
                if (bookResult == 1)
                {    
                    JOptionPane.showMessageDialog(this, "Add Wait List Customer to booking table","Add new Magician", JOptionPane.PLAIN_MESSAGE);
                    Book.deleteWaitList(currentWaitList);
             
                    nameChooserWL.removeAllItems();
                    WLCustomerList = wlManage.getAllWLCustomers();
                    for (int i = 0; i < WLCustomerList.size(); i++)
                    {
                        nameChooserWL.addItem(WLCustomerList.get(i).getName());
                    }
                    nameChooser.removeAllItems();
                    customerList = status.getAllCustomers();
                    for (int k = 0; k < customerList.size(); k++)
                    {
                        nameChooser.addItem(customerList.get(k).getName());
                    }
                }
                waitList = wlManage.getAllWaitList();
                currentWaitList = waitList.get(0);
                selectedHoliday = currentWaitList.getHoliday();
                freeMagician = book.getFreeMagician(selectedHoliday);
            }
        }
    }//GEN-LAST:event_addMagicianButtonActionPerformed

    private void cancelWLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelWLButtonActionPerformed
        int result = 0;

        selectedHoliday = holidayChooser3.getSelectedItem().toString();
        customerName = nameChooserWL.getSelectedItem().toString();
        WaitList cancelWL = new WaitList();
        cancelWL.setHoliday(selectedHoliday);
        cancelWL.setName(customerName);

        result = Book.deleteWaitList(cancelWL);
        
        if (result == 1)
            JOptionPane.showMessageDialog(this, "Cancel Successful!\n","Cancel WaitList", JOptionPane.PLAIN_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, "Cancel Failed!", "Error", JOptionPane.PLAIN_MESSAGE);
        
        nameChooserWL.removeAllItems();
        WLCustomerList = wlManage.getAllWLCustomers();
        for (int i = 0; i < WLCustomerList.size(); i++)
        {
            nameChooserWL.addItem(WLCustomerList.get(i).getName());
        }
    }//GEN-LAST:event_cancelWLButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUIDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HStatusButton;
    private javax.swing.JButton MStatusButton;
    private javax.swing.JButton addHolidayButton;
    private javax.swing.JTextField addHolidayText;
    private javax.swing.JButton addMagicianButton;
    private javax.swing.JTextField addMagicianText;
    private javax.swing.JButton bookClearButton;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelBookButton;
    private javax.swing.JButton cancelWLButton;
    private javax.swing.JButton clearAddButton;
    private javax.swing.JButton deleteMagicianButton;
    private javax.swing.JComboBox<String> holidayChooser;
    private javax.swing.JComboBox<String> holidayChooser1;
    private javax.swing.JComboBox<String> holidayChooser2;
    private javax.swing.JComboBox<String> holidayChooser3;
    private javax.swing.JTextField holidayTextField;
    private javax.swing.JTextField holidayTextField2;
    private javax.swing.JTextField indexTextField;
    private javax.swing.JTextField indexTextField1;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> magicianChooser;
    private javax.swing.JComboBox<String> magicianChooser1;
    private javax.swing.JTextField magicianTextField;
    private javax.swing.JTextField maxTextField;
    private javax.swing.JTextField maxTextField1;
    private javax.swing.JComboBox<String> nameChooser;
    private javax.swing.JComboBox<String> nameChooserWL;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField nameTextField1;
    private javax.swing.JTextField nameTextField3;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton nextButton1;
    private javax.swing.JButton previousButton;
    private javax.swing.JButton previousButton1;
    private javax.swing.JButton statusClearButton;
    private javax.swing.JButton waitListButton;
    private javax.swing.JButton wlClearButton;
    // End of variables declaration//GEN-END:variables
}
